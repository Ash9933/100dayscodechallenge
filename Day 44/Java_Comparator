Problem - Write a java program to compare two objects. In this challenge,we will create a comparator and
          use it to sort an array.
          
Code:

import java.util.*;
import java.lang.*;
 
 
 class Checker implements Comparator{
    Player p1;
    Player p2;
    public int compare(Object o1, Object o2){
        p1 = (Player) o1;
        p2 = (Player) o2;
        if(p1.score>p2.score){return -1;}
        if(p1.score<p2.score){return 1;}
        if(p1.score==p2.score){
            if(p1.name.compareTo(p2.name)<0){return -1;}
            if(p1.name.compareTo(p2.name)>0){return 1;}
        }
        return 0;
    }
}
// Write your Checker class here

class Player{
    String name;
    int score;
    
    Player(String name, int score){
        this.name = name;
        this.score = score;
    }
}

class Solution {

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        int n = scan.nextInt();

        Player[] player = new Player[n];
        Checker checker = new Checker();
        
        for(int i = 0; i < n; i++){
            player[i] = new Player(scan.next(), scan.nextInt());
        }
        scan.close();
     
        Arrays.sort(player, checker);
        for(int i = 0; i < player.length; i++){
            System.out.printf("%s %s\n", player[i].name, player[i].score);
        }
    }
}


Input:

5
amy 100
david 100
heraldo 50
aakansha 75
aleksa 150


Output:

aleksa 150
amy 100
david 100
aakansha 75
heraldo 50

Explanation -  In this challenge, we have created a comparator and use it to sort an array.
               The Player class has two fields: a 'name' String and a 'score' integer.
               Input from stdin is handled by the locked stub code in the Solution class
               The first line contains an integer, n , denoting the number of players.
               Each of the n subsequent lines contains a player's name and, score respectively.
               
               The locked stub code in solution will create a Checker object, use it to sort
               the Player array, and print each sorted element.
